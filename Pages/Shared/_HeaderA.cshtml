
@using crossPublisher
@{
    // Pages definito nel modello e passate tramite ViewData.
    // Se le passavo direttamente con Model.Page, ogni pagina che utilizza _Layout
    // andava a cercare la proprietà Pages al''interno del proprio Model.
    // Vedi se puoi caricare Pages direttamente nel service container, per poter accedervi da 
    // qualunque posizione ed evitare di ricalcolarlo ad ogni richiesta. Servirebbe definire però host, necessario per caricare app settings

    var Pages = ViewData["Pages"] as List<Repository>;
    string lang = "it";

}
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-page="/Index">RazorApp</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">

                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                    </li>
                </ul>

                <ul class="navbar-nav flex-grow-1">
                    @if (Pages != null && Pages.Count > 0)
                    {
                        foreach (Repository pg in Pages)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-page="/@pg.GetLabel(lang)">@pg.GetTitle(lang)</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>
</header>