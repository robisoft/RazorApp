@using crossPublisher
@using Microsoft.AspNetCore.Mvc.Rendering


@{

    // Pages definito nel modello e passate tramite ViewData.
    // Se le passavo direttamente con Model.Page, ogni pagina che utilizza _Layout
    // andava a cercare la proprietà Pages al''interno del proprio Model.
    // Vedi se puoi caricare Pages direttamente nel service container, per poter accedervi da 
    // qualunque posizione ed evitare di ricalcolarlo ad ogni richiesta. Servirebbe definire però host, necessario per caricare app settings

    var Pages = ViewData["Pages"] as List<Repository>;

    Console.WriteLine("_Layout.cshtml --> qui passa");


}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - RazorApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/RazorApp.styles.css" asp-append-version="true" />
</head>
<body>

   @* @Html.Partial(ViewData["HeaderPartial"] as string) *@
   @*  @Html.Partial("_HeaderA") *@

    @await Component.InvokeAsync("HeaderNavigation") 

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @* @Html.Partial(ViewData["FooterPartial"] as string) *@
    @Html.Partial("_FooterA")

@*     <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - RazorApp - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer> *@

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>

@* @{
    List<Repository> pages = new List<Repository>();
    string lang = "it";

    void onInit()
    {
        
    }
} *@